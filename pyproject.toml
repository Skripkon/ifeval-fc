[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ifeval-fc"
version = "1.0.0"
description = "A comprehensive framework for evaluating AI assistant function calling capabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "IFEval-FC Team", email = "ifeval-fc@example.com"},
]
maintainers = [
    {name = "IFEval-FC Team", email = "ifeval-fc@example.com"},
]
keywords = ["ai", "evaluation", "function-calling", "llm", "testing", "benchmark"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Testing",
    "Topic :: Text Processing :: Linguistic",
]
requires-python = ">=3.11"
dependencies = [
    "nltk>=3.8",
    "typing-extensions>=4.0.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-core>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black>=22.0",
    "isort>=5.0",
    "pylint>=2.15",
    "mypy>=1.0",
    "pre-commit>=2.20",
]
notebook = [
    "jupyter>=1.0",
    "ipykernel>=6.0",
    "matplotlib>=3.5",
    "rich>=12.0",
    "tqdm>=4.60",
]

[project.urls]
Homepage = "https://github.com/ifeval-fc/ifeval-fc"
Documentation = "https://ifeval-fc.readthedocs.io/"
Repository = "https://github.com/ifeval-fc/ifeval-fc.git"
"Bug Tracker" = "https://github.com/ifeval-fc/ifeval-fc/issues"

[project.scripts]
ifeval-fc = "IFEval_FC.cli:main"

[tool.setuptools.packages.find]
include = ["IFEval_FC*"]

[tool.setuptools.package-data]
"IFEval_FC" = ["data/*.json"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["IFEval_FC"]
known_third_party = ["nltk", "langchain", "typing_extensions", "pytest", "mypy", "black", "isort", "pylint"]

[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name (for short variable names)
    "C0114",  # missing-module-docstring
    "C0116",  # missing-function-docstring
    "C0301",  # line-too-long
    "C0415",  # import-outside-toplevel
    "E0401",  # import-error
    "R0903",  # too-few-public-methods
    "R0911",  # too-many-return-statements
    "R0913",  # too-many-arguments
    "R1705",  # no-else-return
    "R1710",  # inconsistent-return-statements
    "R1719",  # simplifiable-if-expression
    "W0107",  # unnecessary-pass
    "W0511",  # fixme
    "W0611",  # unused-import
    "W0612",  # unused-variable
    "W0707",  # raise-missing-from
    "W0718",  # broad-exception-caught
    "W1514",  # unspecified-encoding
]

[tool.pylint.format]
max-line-length = 88
indent-string = "    "

[tool.pylint.design]
max-args = 8
max-locals = 20
max-returns = 6
max-branches = 15
max-statements = 60

[tool.pylint.similarities]
min-similarity-lines = 4

[tool.pylint.basic]
good-names = [
    "i", "j", "k", "ex", "Run", "id", "db", "ui", "io", "fp", "fd", "fh", "f",
    "e", "x", "y", "z", "w", "h", "c", "d", "r", "s", "t", "n", "m", "p", "q",
    "v", "a", "b", "o", "l", "g", "u", "k", "j", "f", "e", "d", "c", "b", "a",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
